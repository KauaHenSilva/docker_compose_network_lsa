services:
  router1:
    build:
      context: ./router
      dockerfile: Dockerfile
    volumes:
    - ./router:/app
    environment:
    - vizinhos=[router10, 172.20.10.3, 1],[router2, 172.20.2.3, 1]
    - my_ip=172.20.1.3
    - my_name=router1
    networks:
      subnet_10:
        ipv4_address: 172.20.10.2
      subnet_2:
        ipv4_address: 172.20.2.4
      subnet_1:
        ipv4_address: 172.20.1.3
    cap_add:
    - NET_ADMIN
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.1.3
      && python router.py"
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host10:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_1:
        ipv4_address: 172.20.1.10
    depends_on:
    - router1
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.1.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host11:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_1:
        ipv4_address: 172.20.1.11
    depends_on:
    - router1
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.1.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  router2:
    build:
      context: ./router
      dockerfile: Dockerfile
    volumes:
    - ./router:/app
    environment:
    - vizinhos=[router1, 172.20.1.3, 1],[router3, 172.20.3.3, 1]
    - my_ip=172.20.2.3
    - my_name=router2
    networks:
      subnet_1:
        ipv4_address: 172.20.1.2
      subnet_3:
        ipv4_address: 172.20.3.4
      subnet_2:
        ipv4_address: 172.20.2.3
    cap_add:
    - NET_ADMIN
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.2.3
      && python router.py"
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host20:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_2:
        ipv4_address: 172.20.2.10
    depends_on:
    - router2
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.2.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host21:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_2:
        ipv4_address: 172.20.2.11
    depends_on:
    - router2
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.2.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  router3:
    build:
      context: ./router
      dockerfile: Dockerfile
    volumes:
    - ./router:/app
    environment:
    - vizinhos=[router2, 172.20.2.3, 1],[router4, 172.20.4.3, 1]
    - my_ip=172.20.3.3
    - my_name=router3
    networks:
      subnet_2:
        ipv4_address: 172.20.2.2
      subnet_4:
        ipv4_address: 172.20.4.4
      subnet_3:
        ipv4_address: 172.20.3.3
    cap_add:
    - NET_ADMIN
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.3.3
      && python router.py"
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host30:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_3:
        ipv4_address: 172.20.3.10
    depends_on:
    - router3
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.3.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host31:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_3:
        ipv4_address: 172.20.3.11
    depends_on:
    - router3
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.3.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  router4:
    build:
      context: ./router
      dockerfile: Dockerfile
    volumes:
    - ./router:/app
    environment:
    - vizinhos=[router3, 172.20.3.3, 1],[router5, 172.20.5.3, 1]
    - my_ip=172.20.4.3
    - my_name=router4
    networks:
      subnet_3:
        ipv4_address: 172.20.3.2
      subnet_5:
        ipv4_address: 172.20.5.4
      subnet_4:
        ipv4_address: 172.20.4.3
    cap_add:
    - NET_ADMIN
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.4.3
      && python router.py"
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host40:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_4:
        ipv4_address: 172.20.4.10
    depends_on:
    - router4
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.4.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host41:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_4:
        ipv4_address: 172.20.4.11
    depends_on:
    - router4
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.4.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  router5:
    build:
      context: ./router
      dockerfile: Dockerfile
    volumes:
    - ./router:/app
    environment:
    - vizinhos=[router4, 172.20.4.3, 1],[router6, 172.20.6.3, 1]
    - my_ip=172.20.5.3
    - my_name=router5
    networks:
      subnet_4:
        ipv4_address: 172.20.4.2
      subnet_6:
        ipv4_address: 172.20.6.4
      subnet_5:
        ipv4_address: 172.20.5.3
    cap_add:
    - NET_ADMIN
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.5.3
      && python router.py"
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host50:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_5:
        ipv4_address: 172.20.5.10
    depends_on:
    - router5
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.5.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host51:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_5:
        ipv4_address: 172.20.5.11
    depends_on:
    - router5
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.5.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  router6:
    build:
      context: ./router
      dockerfile: Dockerfile
    volumes:
    - ./router:/app
    environment:
    - vizinhos=[router5, 172.20.5.3, 1],[router7, 172.20.7.3, 1]
    - my_ip=172.20.6.3
    - my_name=router6
    networks:
      subnet_5:
        ipv4_address: 172.20.5.2
      subnet_7:
        ipv4_address: 172.20.7.4
      subnet_6:
        ipv4_address: 172.20.6.3
    cap_add:
    - NET_ADMIN
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.6.3
      && python router.py"
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host60:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_6:
        ipv4_address: 172.20.6.10
    depends_on:
    - router6
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.6.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host61:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_6:
        ipv4_address: 172.20.6.11
    depends_on:
    - router6
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.6.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  router7:
    build:
      context: ./router
      dockerfile: Dockerfile
    volumes:
    - ./router:/app
    environment:
    - vizinhos=[router6, 172.20.6.3, 1],[router8, 172.20.8.3, 1]
    - my_ip=172.20.7.3
    - my_name=router7
    networks:
      subnet_6:
        ipv4_address: 172.20.6.2
      subnet_8:
        ipv4_address: 172.20.8.4
      subnet_7:
        ipv4_address: 172.20.7.3
    cap_add:
    - NET_ADMIN
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.7.3
      && python router.py"
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host70:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_7:
        ipv4_address: 172.20.7.10
    depends_on:
    - router7
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.7.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host71:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_7:
        ipv4_address: 172.20.7.11
    depends_on:
    - router7
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.7.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  router8:
    build:
      context: ./router
      dockerfile: Dockerfile
    volumes:
    - ./router:/app
    environment:
    - vizinhos=[router7, 172.20.7.3, 1],[router9, 172.20.9.3, 1]
    - my_ip=172.20.8.3
    - my_name=router8
    networks:
      subnet_7:
        ipv4_address: 172.20.7.2
      subnet_9:
        ipv4_address: 172.20.9.4
      subnet_8:
        ipv4_address: 172.20.8.3
    cap_add:
    - NET_ADMIN
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.8.3
      && python router.py"
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host80:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_8:
        ipv4_address: 172.20.8.10
    depends_on:
    - router8
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.8.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host81:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_8:
        ipv4_address: 172.20.8.11
    depends_on:
    - router8
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.8.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  router9:
    build:
      context: ./router
      dockerfile: Dockerfile
    volumes:
    - ./router:/app
    environment:
    - vizinhos=[router8, 172.20.8.3, 1],[router10, 172.20.10.3, 1]
    - my_ip=172.20.9.3
    - my_name=router9
    networks:
      subnet_8:
        ipv4_address: 172.20.8.2
      subnet_10:
        ipv4_address: 172.20.10.4
      subnet_9:
        ipv4_address: 172.20.9.3
    cap_add:
    - NET_ADMIN
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.9.3
      && python router.py"
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host90:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_9:
        ipv4_address: 172.20.9.10
    depends_on:
    - router9
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.9.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host91:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_9:
        ipv4_address: 172.20.9.11
    depends_on:
    - router9
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.9.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  router10:
    build:
      context: ./router
      dockerfile: Dockerfile
    volumes:
    - ./router:/app
    environment:
    - vizinhos=[router1, 172.20.1.3, 1],[router9, 172.20.9.3, 1]
    - my_ip=172.20.10.3
    - my_name=router10
    networks:
      subnet_1:
        ipv4_address: 172.20.1.4
      subnet_9:
        ipv4_address: 172.20.9.2
      subnet_10:
        ipv4_address: 172.20.10.3
    cap_add:
    - NET_ADMIN
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.10.3
      && python router.py"
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host100:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_10:
        ipv4_address: 172.20.10.10
    depends_on:
    - router10
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.10.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
  host101:
    build:
      context: ./host
      dockerfile: Dockerfile
    networks:
      subnet_10:
        ipv4_address: 172.20.10.11
    depends_on:
    - router10
    command: /bin/bash -c "ip route del default && ip route add default via 172.20.10.3
      dev eth0 && sleep infinity"
    cap_add:
    - NET_ADMIN
    cpus: '0.32000000000000006'
    mem_limit: 405M
networks:
  subnet_1:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.1.0/24
        gateway: 172.20.1.1
  subnet_2:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.2.0/24
        gateway: 172.20.2.1
  subnet_3:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.3.0/24
        gateway: 172.20.3.1
  subnet_4:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.4.0/24
        gateway: 172.20.4.1
  subnet_5:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.5.0/24
        gateway: 172.20.5.1
  subnet_6:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.6.0/24
        gateway: 172.20.6.1
  subnet_7:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.7.0/24
        gateway: 172.20.7.1
  subnet_8:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.8.0/24
        gateway: 172.20.8.1
  subnet_9:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.9.0/24
        gateway: 172.20.9.1
  subnet_10:
    driver: bridge
    ipam:
      config:
      - subnet: 172.20.10.0/24
        gateway: 172.20.10.1
